@model DenemeIdentitiy.Models.Brands

@{
    ViewBag.Title = "Edit";
}

<div class="col-md-12">
    <div class="card">
        <div class="card-header">

        </div>
        <div class="card-body">
            <div class="px-3">
                @using (Html.BeginForm("Edit", "Brands", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="row">
                            <div class="form-group col-md-6 mb-2">
                                @Html.LabelFor(model => model.BrandName, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.BrandName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BrandName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6 mb-2">
                                @Html.LabelFor(model => model.TypeName, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.TypeName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TypeName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6 mb-2">
                                @Html.LabelFor(model => model.RegistrationNo, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.RegistrationNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RegistrationNo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6 mb-2">
                                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6 mb-2">
                                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6 mb-2">
                                @Html.LabelFor(model => model.RegistrationPhoto, htmlAttributes: new { @class = "control-label" })
                                @if (Model.RegistrationPhoto != null)
                                {
                                    @Html.HiddenFor(a => a.RegistrationPhoto)
                                    <a href="~/upload/@Model.RegistrationPhoto" target="_blank">@Model.RegistrationPhoto</a>
                                }
                                @Html.EditorFor(model => model.RegistrationPhoto, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
                                @*<input type="file" name="file" multiple="multiple" />*@
                                @Html.ValidationMessageFor(model => model.RegistrationPhoto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6 mb-2">
                                @Html.LabelFor(model => model.ApplicationUserId, "Firma", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("ApplicationUserId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ApplicationUserId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6 mb-2">
                                @Html.LabelFor(model => model.Status, "Durum", htmlAttributes: new { @class = "control-label" })
                                @Html.EnumDropDownListFor(model => model.Status, "Durum Seçiniz.", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-actions left">
                            <input type="submit" value="Kaydet" class="btn btn-raised btn-primary" />
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>
